import requests, re, sys
import os, signal
from bs4 import BeautifulSoup
from tqdm import tqdm
import subprocess as sp

def signal_handler(signal, frame):
    print('You pressed Ctrl+C!')
    sys.exit(0)
if __name__ == "__main__":
    signal.signal(signal.SIGINT, signal_handler)

tmp = sp.call('reset',shell=True)
print ("\n\n\tPentester Academy Downloader\n\n\n")
cookie = (input("Cookie: ").replace('\n', '').lstrip().rstrip())
tmp = sp.call('reset',shell=True)
cookies = {'SACSID': cookie}
base = "https://www.pentesteracademy.com"
cwd = os.getcwd()
base_dir = 'PentesterAcademy'
ses = requests.Session()

# Get name and links to all courses
def course_list():
    cl = {} 
    r = ses.get(base+'/topics', cookies=cookies)
    soup = BeautifulSoup(r.text, 'html.parser')
    div = soup.find_all('div', class_='media')
    raw_links = re.findall(r'<h3 class="media-heading"><a.+?</a></h3>', str(div))
    for entry in raw_links:
        link = re.findall(r'(\/course\?id=[0-9]*)', entry)[0] 
        name = re.findall(r'blank">.+?</a>', entry)[0].replace('blank">', '').replace('</a>', '').lstrip().rstrip()
        cl[name] = link
    return cl

# Get the names and links to all videos/lectures 
# for a specific course
def lesson_list(link):
    vl = {}
    r = ses.get(base+link, cookies=cookies)
    soup = BeautifulSoup(r.text, 'html.parser')
    raw_links = re.findall(r'<a href=".+?</a>', str(soup))
    for entry in raw_links:
        if 'video?id=' in entry:
            link = re.findall(r'(\/video\?id=[0-9]*)', entry)[0]
            link = link.replace('video', 'accounting')
            num = link.split('=')[-1]
            name = re.findall(r'">.+?</a>', entry)[0].replace('>', '').replace('</a', '').replace('"', '').replace(' ', '').lstrip().rstrip() 
            name = num+'-'+name
            vl[name] = link
    return vl

#Debug
#print (lesson_list('/course?id=1'))
#sys.exit()

c_list = course_list()
c_index = {k: v for k, v in enumerate(c_list.keys())}

while True:
    for key,value in c_index.items():
        print ("{}: {}".format(key, value))

    value = int(input("Choose: ").replace('\n', '').lstrip().rstrip())
    print ("\n\n")
    if value not in c_index.keys():
        print ("InValid Choice") 
        sys.exit()

    tmp = sp.call('reset',shell=True)
    select_course = c_index[value].replace(' ', '')
    select_link = (c_list[c_index[value]])

    if os.path.isdir(cwd+'/'+base_dir) == False:
        print ("(+) Directory Created: {}".format(cwd+'/'+base_dir)) 
        os.mkdir(cwd+'/'+base_dir)

    os.chdir(cwd+'/'+base_dir)
    print ("(+) Change Directory: {}".format(cwd+'/'+base_dir))

    if os.path.isdir(cwd+'/'+base_dir+'/'+select_course) == False:    
        os.mkdir(cwd+'/'+base_dir+'/'+select_course)
        print ("(+) Directory Created: {}".format(cwd+'/'+base_dir+'/'+select_course))

    os.chdir(cwd+'/'+base_dir+'/'+select_course)
    print ("(+) Change Directory: {}".format(cwd+'/'+base_dir+'/'+select_course))
    print ('\n\n')

    #Debug
    #print (lesson_list(select_link))
    #sys.exit()

    dl_list = lesson_list(select_link)
    for dname,dlink in dl_list.items():
        print ("(+) Downloading {} {}" .format(dname, dlink)) 
        fname = str(dname)+'.mp4'
        if os.path.isfile(fname) == False:
            try:
                # Reference: https://stackoverflow.com/questions/37573483/progress-bar-while-download-file-over-http-with-requests/37573701
                data = ses.get(base+dlink, cookies=cookies, stream=True)
                total_size = int(data.headers.get('content-length', 0))
                block_size = 1024 
                t=tqdm(total=total_size, unit='iB', unit_scale=True)
                with open(fname, 'wb') as f:
                    for dat in data.iter_content(block_size):
                        t.update(len(dat))
                        f.write(dat)
                t.close()        
                if total_size != 0 and t.n != total_size:
                    print("(-) ERROR, something went wrong")
            except Exception as err:    
                print (err)
        else:
            print (" (-) File Already Exist")
